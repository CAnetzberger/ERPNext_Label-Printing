{"version":3,"file":"label_printing.min.js","sources":["../../../../apps/label_printing/label_printing/public/js/label_printing_desk.js"],"sourcesContent":["$(document).ready(function () {\n  $(\".dropdown-notifications\").after('<li id=\"labels-toolbar\" class=\"nav-item\"><a class=\"nav-link label-printing-icon text-muted\"><i class=\"fa fa-tag fa-lg\" aria-hidden=\"true\"></i></a></li>');\n  $(\"#labels-toolbar\").click(function (page) {\n    setupLabelsDialog(page);\n  });\n\n});\n\n\n\nfunction setupLabelsDialog(page) {\n  let cur_frm = page.view.cur_frm\n\n  let fields = {\n    labels: [{\n      item_qty: 0,\n      label_qty: 1\n    }]\n  };\n\n\n  if (cur_frm !== null) {\n    if (cur_frm.doctype === \"Work Order\" || cur_frm.doctype === \"Item\") {\n      if (cur_frm.docname) {\n        fields.doctype = cur_frm.doctype\n        fields.docname = cur_frm.docname\n      }\n    }\n  }\n\n  let d = new frappe.ui.Dialog({\n    title: __(\"Print Labels\"),\n    fields: [{\n      label: __(\"Reference Doctype\"),\n      options: ['Work Order', 'Item', 'Label'],\n      fieldname: 'doctype',\n      fieldtype: 'Select',\n      default: fields.doctype,\n    },\n    {\n      label: __(\"Get data\"),\n      fieldname: 'get_data',\n      fieldtype: 'Button',\n      click: () => {\n        handleDataFetch()\n      }\n    },\n    {\n      fieldtype: 'Column Break'\n    },\n    {\n      label: __(\"Reference Docname\"),\n      fieldname: 'docname',\n      fieldtype: 'Data',\n      options: 'doctype',\n      default: fields.docname,\n    },\n    {\n      fieldtype: 'Section Break',\n      label: __('Information')\n    },\n    {\n      label: __(\"Item Code\"),\n      fieldname: 'item_code',\n      fieldtype: 'Data'\n    },\n    {\n      label: __(\"Item Name\"),\n      fieldname: 'item_name',\n      fieldtype: 'Data'\n    },\n    {\n      label: __(\"Delivery Date\"),\n      fieldname: 'delivery_date',\n      fieldtype: 'Date'\n    },\n    {\n      fieldtype: 'Column Break'\n    },\n    {\n      label: __(\"Customer\"),\n      fieldname: 'customer',\n      fieldtype: 'Data'\n    },\n    {\n      label: __(\"Batch\"),\n      fieldname: 'batch',\n      fieldtype: 'Data'\n    },\n    {\n      fieldtype: 'Section Break',\n      label: __('Labels')\n    },\n    {\n      fieldname: \"labels\",\n      fieldtype: \"Table\",\n      cannot_add_rows: false,\n      in_place_edit: true,\n      data: fields.labels,\n      get_data: () => {\n        return fields.labels;\n      },\n      fields: [{\n        fieldtype: 'Int',\n        fieldname: \"item_qty\",\n        in_list_view: 1,\n        label: __('Item Qty')\n      },\n      {\n        label: __(\"Label Qty\"),\n        fieldname: 'label_qty',\n        in_list_view: 1,\n        fieldtype: 'Int'\n      },\n      {\n        fieldtype: 'Data',\n        fieldname: \"information\",\n        in_list_view: 1,\n        label: __('Information')\n      },\n      ]\n    },\n    ],\n    primary_action_label: 'Print',\n    primary_action(values) {\n      frappe.call({\n        method: \"label_printing.api.print_label\",\n        args: {\n          values: values\n        },\n        callback: function (r) {\n          if (r.message === 200) {\n            frappe.show_alert(\"Label printing successful\", 5);\n          }\n        },\n      });\n      d.hide();\n    }\n  });\n  handleDataFetch();\n  d.show();\n\n\n  // handle dpctype change\n  d.fields_dict.doctype.$input.on('change', function () {\n    d.fields_dict.docname.refresh();\n  });\n\n  function handleDataFetch() {\n    fields = d.get_values()\n    if (fields.doctype && fields.docname) {\n      let doc = get_doc(fields.doctype, fields.docname)\n      if (fields.doctype === \"Work Order\") {\n        let item = get_doc(\"Item\", doc.production_item)\n        let se = 1\n        frappe.call({\n          method: \"label_printing.api.get_associated_stockentry\",\n          async: false,\n          args: { workorder: fields.docname },\n          callback(r) {\n            if (r.message) {\n              fields.batch = r.message.items[r.message.items.length - 1].batch_no\n            }\n          }\n        })\n        fields.item_code = item.item_code\n        fields.item_name = item.item_name\n        fields.delivery_date = doc.expected_delivery_date\n        fields.labels[0].item_qty = doc.qty\n        fields.labels[0].label_qty = 1\n\n        if (item.associated_company) {\n          let customer = get_doc(\"Customer\", item.associated_company)\n          if (customer.short_name) {\n            fields.customer = customer.short_name\n          } else {\n            fields.customer = item.associated_company\n          }\n        }\n\n        fields.total_amount = doc.qty\n        fields.labels[0].qty_per_label = doc.qty\n        d.fields_dict.labels.refresh();\n\n      } else if (fields.doctype === \"Item\") {\n        let item = get_doc(\"Item\", doc.item_code)\n\n        fields.item_code = doc.item_code\n        fields.item_name = doc.item_name\n\n        if (item.associated_company) {\n          let customer = get_doc(\"Customer\", doc.associated_company)\n          if (customer.short_name) {\n            fields.customer = customer.short_name\n          } else {\n            fields.customer = doc.associated_company\n          }\n        }\n      }\n      d.set_values(fields)\n    }\n  }\n\n}\n\nfunction get_doc(doctype, docname) {\n  let res;\n  frappe.call({\n    method: \"frappe.client.get\",\n    async: false,\n    args: {\n      doctype: doctype,\n      name: docname,\n    },\n    callback(r) {\n      if (r.message) {\n        res = r.message\n      }\n    }\n  });\n  return res;\n}"],"names":["get_doc","doctype","docname","let","res","frappe","call","method","async","args","name","callback","r","message","$","document","ready","after","click","page","cur_frm","view","fields","labels","item_qty","label_qty","d","ui","Dialog","title","__","label","options","fieldname","fieldtype","default","handleDataFetch","cannot_add_rows","in_place_edit","data","get_data","in_list_view","primary_action_label","primary_action","values","show_alert","hide","get_values","doc","item","production_item","workorder","batch","items","length","batch_no","item_code","item_name","delivery_date","expected_delivery_date","qty","associated_company","customer","short_name","total_amount","qty_per_label","fields_dict","refresh","set_values","show","$input","on","setupLabelsDialog"],"mappings":"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"}